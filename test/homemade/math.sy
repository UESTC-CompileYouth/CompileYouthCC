// reference: https://zhuanlan.zhihu.com/p/20085048

const float e = 2.718281828459045;

float my_fabs(float x) {
  if (x > 0) return x;
  return -x;
}

float my_pow(float a, int n) {
  if (n < 0) return 1 / my_pow(a, -n);
  float res = 1.0;
  while (n) {
    if (n % 2) res = res * a;
    a = a * a;
    n = n / 2;
  }
  return res;
}

float my_sqrt(float x) {
  if (x > 100) return 10.0 * my_sqrt(x / 100);
  float t = x / 8 + 0.5 + 2 * x / (4 + x);
  int c = 10;
  while (c) {
    t = (t + x / t) / 2;
    c = c - 1;
  }
  return t;
}

float F1(float x) { return 1 / x; }

float F2(float x) { return 1 / my_sqrt(1 - x * x); }

float simpson(float a, float b, int flag) {
  float c = a + (b - a) / 2;
  if (flag == 1) return (F1(a) + 4 * F1(c) + F1(b)) * (b - a) / 6;
  if (flag == 2) return (F2(a) + 4 * F2(c) + F2(b)) * (b - a) / 6;
  return 0;
}

float asr5(float a, float b, float eps, float A, int flag) {
  float c = 2;
  float L = simpson(1, 2, 1), R = simpson(2, 3, 1);
  if (my_fabs(L + R - A) <= 15 * eps) return L + R + (L + R - A) / 15.0;
  return asr5(a, c, eps / 2, L, flag) + asr5(c, b, eps / 2, R, flag);
}

float my_ln() { return asr5(1, 3, 1e-8, 10.0 / 9.0, 1); }
int main() {
  putfloat(1.098612);
  putch(32);
  putfloat(my_ln());
  return 0;
}
